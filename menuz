#!/usr/bin/env zsh

#
# menus with rofi\fzf and zsh arrays
#

# Set path to menu files
typeset menudir=${MENUZ_DIR:-$HOME/.config/menuz}

# Check for rofi
typeset has_rofi=$+commands[rofi]

# check for fzf
typeset has_fzf=$+commands[fzf]

# check for $menudir
[[ -d $menudir ]] || \
  { echo "$menudir does not exist!"; exit 1 }

# build menu
function _show_menu() {
  local NAME
  local -A ITEMS
  local menu=$menudir/$1
  local choice

  # display specified menu
  if [[ -f $menu ]]
  then
    source $menu

    choice=$( ( _get_items ${(k)ITEMS[@]}) | eval "$(_get_ui $NAME)")
    if [[ -n $choice ]]
    then
      eval ${ITEMS[$choice]}
    fi

  # select menu to edit
  elif [[ $1 == "-e" ]]
  then
    _edit_menu

  # select menu to display
  else
    _select_menu
  fi
}

# Select menu
function _select_menu() {
  local -A LIST
  local NAME
  local -A ITEMS
  local menu
  local choice
  local title=${MENUZ_LABEL_SELECT:-"Select Menu"}

  for menu ($menudir/*)
  do
    source $menu
    LIST[$NAME]+=$(basename $menu)
  done

  choice=$( (_get_items ${(k)LIST[@]}) | eval "$(_get_ui $title)")
  if [[ -n $choice ]]
  then
    _show_menu ${LIST[$choice]}
  fi
}

# Edit
function _edit_menu() {
  local -A LIST
  local NAME
  local -A ITEMS
  local menu
  local choice
  local title=${MENUZ_LABEL_EDIT:-"Edit Menu"}

  for menu ($menudir/*)
  do
    source $menu
    LIST[$NAME]+=$menu
  done

  choice=$( (_get_items ${(k)LIST[@]}) | eval "$(_get_ui $title)")
  if [[ -n $choice ]]
  then
    exec $TERMINAL -e $EDITOR ${LIST[$choice]}
  fi
}

# Print menu items
function _get_items() { local i; for i ($@); do echo $i; done }

# Determine if script was called from terminal or GUI
# and return appropriate UI
function _get_ui() {
  local proc=$(readlink -f /proc/$(ps -o ppid:1= -p $$)/exe)
  local shell=$(readlink -f "$SHELL")
  if [[ $proc == $shell ]] || [[ ${proc:t} == "tmux" ]]
  then
    (( $has_fzf )) || return 1
    local layout=${MENUZ_FZF_LAYOUT:-"reverse"}
    echo "fzf -e --layout=$layout --header='$@'"
  else
    (( $has_rofi )) || return 1
    echo "rofi -dmenu -i -p '$@'"
  fi
}

_show_menu $@

exit 0

# vim: ft=sh ts=2 sw=0 et:
